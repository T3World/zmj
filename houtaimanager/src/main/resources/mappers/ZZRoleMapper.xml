<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzmj.mapper.ZZRoleMapper">
	<resultMap id="BaseResultMap" type="com.zzmj.pojo.entity.ZZRoleEntity">
		<id column="Id" property="id" jdbcType="VARCHAR" />
		<result column="Role_Id" property="roleId" jdbcType="VARCHAR" />
		<result column="Role_Name" property="roleName" jdbcType="VARCHAR" />
		<result column="Role_Value" property="roleValue" jdbcType="VARCHAR" />
		<result column="Role_Des" property="roleDes" jdbcType="VARCHAR" />
		<result column="CreatePerson" property="createperson" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="SortCode" property="sortcode" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="VARCHAR" />
		<result column="IsDel" property="isdel" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, Role_Id, Role_Name, Role_Value, Role_Des, CreatePerson,
		CreateTime,
		UpdateTime,
		SortCode, `Status`, IsDel
	</sql>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.zzmj.pojo.entity.ZZRoleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ZZ_Role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleAndPage" resultMap="BaseResultMap"
		parameterType="com.zzmj.pojo.entity.ZZRoleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ZZ_Role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample" parameterType="com.zzmj.pojo.entity.ZZRoleExample">
		delete from ZZ_Role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<select id="countByExample" parameterType="com.zzmj.pojo.entity.ZZRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ZZ_Role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ZZ_Role
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.roleId != null">
				Role_Id = #{record.roleId,jdbcType=VARCHAR},
			</if>
			<if test="record.roleName != null">
				Role_Name = #{record.roleName,jdbcType=VARCHAR},
			</if>
			<if test="record.roleValue != null">
				Role_Value = #{record.roleValue,jdbcType=VARCHAR},
			</if>
			<if test="record.roleDes != null">
				Role_Des = #{record.roleDes,jdbcType=VARCHAR},
			</if>
			<if test="record.createperson != null">
				CreatePerson = #{record.createperson,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.sortcode != null">
				SortCode = #{record.sortcode,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				`Status` = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.isdel != null">
				IsDel = #{record.isdel,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ZZ_Role
		set Id = #{record.id,jdbcType=VARCHAR},
		Role_Id =
		#{record.roleId,jdbcType=VARCHAR},
		Role_Name =
		#{record.roleName,jdbcType=VARCHAR},
		Role_Value =
		#{record.roleValue,jdbcType=VARCHAR},
		Role_Des =
		#{record.roleDes,jdbcType=VARCHAR},
		CreatePerson =
		#{record.createperson,jdbcType=VARCHAR},
		CreateTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		UpdateTime =
		#{record.updatetime,jdbcType=TIMESTAMP},
		SortCode =
		#{record.sortcode,jdbcType=VARCHAR},
		`Status` =
		#{record.status,jdbcType=VARCHAR},
		IsDel =
		#{record.isdel,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ZZ_Role
		where Id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		ZZ_Role
		where Id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.zzmj.pojo.entity.ZZRoleEntity">
		insert into ZZ_Role (Id,
		Role_Id, Role_Name,
		Role_Value, Role_Des, CreatePerson,
		CreateTime,
		UpdateTime, SortCode,
		`Status`, IsDel)
		values (#{id,jdbcType=VARCHAR},
		#{roleId,jdbcType=VARCHAR},
		#{roleName,jdbcType=VARCHAR},
		#{roleValue,jdbcType=VARCHAR}, #{roleDes,jdbcType=VARCHAR},
		#{createperson,jdbcType=VARCHAR},
		now(),
		now(),
		#{sortcode,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{isdel,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zzmj.pojo.entity.ZZRoleEntity">
		insert into ZZ_Role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			Id,
			Role_Id,
			Role_Name,
			Role_Value,
			Role_Des,
			CreatePerson,
			CreateTime,
			UpdateTime,
			SortCode,
			`Status`,
			IsDel,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=VARCHAR},
			#{roleId,jdbcType=VARCHAR},
			#{roleName,jdbcType=VARCHAR},
			#{roleValue,jdbcType=VARCHAR},
			#{roleDes,jdbcType=VARCHAR},
			#{createperson,jdbcType=VARCHAR},
			#{createtime,jdbcType=TIMESTAMP},
			#{updatetime,jdbcType=TIMESTAMP},
			#{sortcode,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			#{isdel,jdbcType=INTEGER},
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zzmj.pojo.entity.ZZRoleEntity">
		update ZZ_Role
		<set>
			<if test="roleId != null">
				Role_Id = #{roleId,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				Role_Name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleValue != null">
				Role_Value = #{roleValue,jdbcType=VARCHAR},
			</if>
			<if test="roleDes != null">
				Role_Des = #{roleDes,jdbcType=VARCHAR},
			</if>
			<if test="createperson != null">
				CreatePerson = #{createperson,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="sortcode != null">
				SortCode = #{sortcode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				`Status` = #{status,jdbcType=VARCHAR},
			</if>
			<if test="isdel != null">
				IsDel = #{isdel,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zzmj.pojo.entity.ZZRoleEntity">
		update ZZ_Role
		set
		Role_Id = #{roleId,jdbcType=VARCHAR},
		Role_Name =
		#{roleName,jdbcType=VARCHAR},
		Role_Value =
		#{roleValue,jdbcType=VARCHAR},
		Role_Des = #{roleDes,jdbcType=VARCHAR},
		CreatePerson = #{createperson,jdbcType=VARCHAR},
		CreateTime =
		#{createtime,jdbcType=TIMESTAMP},
		UpdateTime =
		#{updatetime,jdbcType=TIMESTAMP},
		SortCode =
		#{sortcode,jdbcType=VARCHAR},
		`Status` = #{status,jdbcType=VARCHAR},
		IsDel = #{isdel,jdbcType=INTEGER}
		where Id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="listRoleAll" resultMap="BaseResultMap">
		select
		Id, Role_Id, Role_Name,
		Role_Value, Role_Des, CreatePerson, CreateTime,
		UpdateTime,
		SortCode
		from
		ZZ_Role
		where IsDel=0
		order by SortCode
	</select>

	<select id="listRoleByKeywords" resultMap="BaseResultMap">
		select
		Id, Role_Id,
		Role_Name, Role_Value, Role_Des, CreatePerson, CreateTime,
		UpdateTime,
		SortCode
		from
		ZZ_Role
		where IsDel=0
		and Role_Name like
		concat('%',#{keyword},'%')
		order by SortCode
	</select>

	<select id="countRoleAll" resultType="Integer">
		select count(*) from
		ZZ_Role where IsDel=0
	</select>

	<select id="countRoleByKeywords" resultType="Integer">
		select count(*) from
		ZZ_Role where IsDel=0
		and Role_Name like concat('%',#{keyword},'%')
	</select>
	
	<select id="countRoleIfAdmin" parameterType="String" resultType="Integer">
	   
	</select>
	
	   <update id="updateByRoleIdSelective" parameterType="com.zzmj.pojo.entity.ZZRoleEntity">
        update ZZ_Role
        <set>
            <if test="roleName != null">
                Role_Name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleValue != null">
                Role_Value = #{roleValue,jdbcType=VARCHAR},
            </if>
            <if test="roleDes != null">
                Role_Des = #{roleDes,jdbcType=VARCHAR},
            </if>
            <if test="createperson != null">
                CreatePerson = #{createperson,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                CreateTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="sortcode != null">
                SortCode = #{sortcode,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `Status` = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where Role_Id = #{roleId,jdbcType=VARCHAR}
    </update>
</mapper>